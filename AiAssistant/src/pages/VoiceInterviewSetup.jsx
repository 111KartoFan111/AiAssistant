import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Header from '../components/Header';
import InterviewService from '../services/interviewService';
import { Swiper, SwiperSlide } from 'swiper/react';
import 'swiper/css';

const VoiceInterviewSetup = () => {
  const navigate = useNavigate();
  const [field, setField] = useState('it'); 
  const [position, setPosition] = useState('Senior Java Developer');
  const [jobDescription, setJobDescription] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [language, setLanguage] = useState('en');
  const [company, setCompany] = useState('');

  const handleStartInterview = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setError('');

    try {
      const response = await InterviewService.startVoiceInterview({ 
        position, 
        jobDescription, 
        language,
        company 
      });
      const { interviewId, firstQuestion, questionType, currentQuestionNumber, totalQuestions } = response.data;

      navigate('/voice-interview', {
        state: {
          interviewId,
          initialQuestion: firstQuestion,
          position,
          questionType,
          currentQuestionNumber,
          totalQuestions
        }
      });
    } catch (err) {
      setError('Failed to start voice interview. Please try again.');
      console.error('Start voice interview error:', err);
      setIsLoading(false);
    }
  };

  const companies = [
    { 
      id: 'kaspi', 
      name: 'Kaspi Bank', 
      logo: '/images/kaspi.png',
      hoverColor: 'hover:border-red-500',
      hoverBg: 'hover:bg-red-50'
    },
    { 
      id: 'sulpak', 
      name: 'Sulpak', 
      logo: '/images/sulpak.png',
      hoverColor: 'hover:border-orange-500',
      hoverBg: 'hover:bg-orange-50'
    },
    { 
      id: 'halyk', 
      name: '–ù–∞—Ä–æ–¥–Ω—ã–π –±–∞–Ω–∫', 
      logo: '/images/halyk.png',
      hoverColor: 'hover:border-green-500',
      hoverBg: 'hover:bg-green-50'
    },
    { 
      id: 'magnum', 
      name: 'Magnum', 
      logo: '/images/magnum.png',
      hoverColor: 'hover:border-pink-500',
      hoverBg: 'hover:bg-pink-50'
    },
    { 
      id: 'bi', 
      name: 'BI Group', 
      logo: '/images/bi.png',
      hoverColor: 'hover:border-blue-500',
      hoverBg: 'hover:bg-blue-50'
    },
    { 
      id: 'mega', 
      name: 'MEGA Alma-Ata', 
      logo: '/images/mega.png',
      hoverColor: 'hover:border-yellow-500',
      hoverBg: 'hover:bg-yellow-50'
    },
    { 
      id: 'kcell', 
      name: 'Kcell', 
      logo: '/images/kcell.png',
      hoverColor: 'hover:border-purple-500',
      hoverBg: 'hover:bg-purple-50'
    },
    { 
      id: 'kazaq', 
      name: '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º', 
      logo: '/images/kazaq.svg',
      hoverColor: 'hover:border-cyan-500',
      hoverBg: 'hover:bg-cyan-50'
    },
    { 
      id: 'credit', 
      name: '–ë–∞–Ω–∫ –¶–µ–Ω—Ç—Ä–ö—Ä–µ–¥–∏—Ç', 
      logo: '/images/credit.png',
      hoverColor: 'hover:border-indigo-500',
      hoverBg: 'hover:bg-indigo-50'
    },
    { 
      id: 'bazis', 
      name: 'BAZIS-A', 
      logo: '/images/bazis.png',
      hoverColor: 'hover:border-gray-600',
      hoverBg: 'hover:bg-gray-50'
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <div className="max-w-3xl mx-auto px-6 pt-10 pb-20">
        <button 
          onClick={() => navigate('/dashboard')}
          className="flex items-center text-gray-600 hover:text-gray-900 mb-6 transition"
        >
          <span className="mr-2">‚Üê</span> –ù–∞–∑–∞–¥ –∫ Dashboard
        </button>

        <div className="bg-white rounded-2xl shadow-lg p-8">
          <div className="flex items-center gap-3 mb-2">
            <div className="w-10 h-10 bg-[#3D2D4C] rounded-lg flex items-center justify-center">
              <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z"/>
                <path d="M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z"/>
              </svg>
            </div>
            <h1 className="text-3xl font-bold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤—å—é</h1>
          </div>
          <p className="text-gray-600 mb-8">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤—å—é (20 –≤–æ–ø—Ä–æ—Å–æ–≤)</p>

          <form onSubmit={handleStartInterview} className="space-y-6">
            {/* Interview Language */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä–≤—å—é *
              </label>
              <div className="grid grid-cols-3 gap-4">
                {[
                  { id: 'en', name: 'English', flag: 'üá¨üáß' },
                  { id: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
                  { id: 'kz', name: '“ö–∞–∑–∞“õ—à–∞', flag: 'üá∞üáø' }
                ].map((lang) => (
                  <button
                    key={lang.id}
                    type="button"
                    onClick={() => setLanguage(lang.id)}
                    className={`flex items-center justify-center p-4 rounded-lg border-2 transition-all ${
                      language === lang.id
                        ? 'border-[#3D2D4C] bg-[#3D2D4C] bg-opacity-10'
                        : 'border-gray-200 hover:border-[#3D2D4C]'
                    }`}
                  >
                    <span className="text-xl mr-2">{lang.flag}</span>
                    <span className="font-medium">{lang.name}</span>
                  </button>
                ))}
              </div>
            </div>

            {/* Select Company */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-3">
                –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
              </label>
              <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
                {companies.map((comp) => (
                  <button
                    key={comp.id}
                    type="button"
                    onClick={() => setCompany(comp.id)}
                    className={`group p-4 rounded-xl border-2 transition-all duration-300 ${
                      company === comp.id
                        ? 'border-[#3D2D4C] bg-[#3D2D4C] bg-opacity-10'
                        : `border-gray-200 ${comp.hoverColor} ${comp.hoverBg}`
                    }`}
                  >
                    <div className="h-12 mb-2 flex items-center justify-center">
                      <img 
                        src={comp.logo} 
                        alt={comp.name}
                        className="max-h-full max-w-full object-contain"
                      />
                    </div>
                    <div className="font-medium text-xs text-center text-gray-700">
                      {comp.name}
                    </div>
                  </button>
                ))}
              </div>
            </div>

            {/* Field / Industry */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°—Ñ–µ—Ä–∞ / –ò–Ω–¥—É—Å—Ç—Ä–∏—è *
              </label>
              <select
                value={field}
                onChange={(e) => setField(e.target.value)}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D2D4C] focus:border-transparent outline-none transition"
                required
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ñ–µ—Ä—É</option>
                <option value="it">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</option>
                <option value="finance">–§–∏–Ω–∞–Ω—Å—ã</option>
                <option value="marketing">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</option>
                <option value="engineering">–ò–Ω–∂–µ–Ω–µ—Ä–∏—è</option>
                <option value="healthcare">–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</option>
              </select>
            </div>

            {/* Position */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –î–æ–ª–∂–Ω–æ—Å—Ç—å *
              </label>
              <input
                type="text"
                value={position}
                onChange={(e) => setPosition(e.target.value)}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D2D4C] focus:border-transparent outline-none transition"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Senior Java Developer, Product Manager"
                required
              />
            </div>

            {/* Job Description */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
              </label>
              <textarea
                value={jobDescription}
                onChange={(e) => setJobDescription(e.target.value)}
                rows="4"
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D2D4C] focus:border-transparent outline-none transition resize-none"
                placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤..."
              />
            </div>

            {/* Voice Interview Info */}
            <div className="bg-[#3D2D4C] bg-opacity-10 border-l-4 border-[#3D2D4C] p-4 rounded">
              <div className="flex items-start">
                <span className="text-[#3D2D4C] text-xl mr-3">üéôÔ∏è</span>
                <div>
                  <p className="text-gray-900 font-medium mb-1">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤—å—é (20 –≤–æ–ø—Ä–æ—Å–æ–≤)</p>
                  <ul className="text-gray-700 text-sm space-y-1">
                    <li>‚Ä¢ <strong>–í–æ–ø—Ä–æ—Å—ã –æ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ (1-5):</strong> –û –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏ –∫–∞—Ä—å–µ—Ä–µ</li>
                    <li>‚Ä¢ <strong>–°–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (6-13):</strong> –ö–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏</li>
                    <li>‚Ä¢ <strong>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (14-20):</strong> –ù–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏</li>
                    <li className="mt-2 text-[#3D2D4C] font-semibold">üí° –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ –≤ –º–∏–∫—Ä–æ—Ñ–æ–Ω</li>
                  </ul>
                </div>
              </div>
            </div>
            
            {error && <p className="text-red-500 text-sm text-center">{error}</p>}

            <button
              type="submit"
              disabled={isLoading}
              className="w-full bg-[#3D2D4C] hover:bg-[#2D1D3C] text-white font-semibold py-4 rounded-lg transition shadow-md hover:shadow-lg disabled:bg-gray-400 flex items-center justify-center gap-2"
            >
              {isLoading ? (
                '–ó–∞–ø—É—Å–∫...'
              ) : (
                <>
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z"/>
                    <path d="M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z"/>
                  </svg>
                  –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é (20 –≤–æ–ø—Ä–æ—Å–æ–≤)
                </>
              )}
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};

export default VoiceInterviewSetup;